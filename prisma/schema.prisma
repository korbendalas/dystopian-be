// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  firstName     String
  lastName      String
  username      String          @unique
  telephone     String?
  email         String          @unique
  password      String
  Favorites     Favorites[]
  user_type     UserType        @default(REGULAR)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  UserAvatar    UserAvatars[]
  ProductImages ProductImages[]
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String
  parentId      Int?
  parent        Category?  @relation("Subcategories", fields: [parentId], references: [id])
  subcategories Category[] @relation("Subcategories")
  products      Products[] @relation("CategoryProducts")
}

model Products {
  id               Int                @id @default(autoincrement())
  uuid             String             @unique @default(uuid())
  title            String
  price            Int
  discountPrice    Int?
  quantity         Int                @default(0)
  sold             Int                @default(0)
  brand_id         Int
  Brand            Brands             @relation(fields: [brand_id], references: [id])
  smallDescription String
  largeDescription String
  specification    String
  categoryId       Int
  Category         Category           @relation("CategoryProducts", fields: [categoryId], references: [id])
  Favorites        Favorites[]
  ProductImages    ProductImages[]
  FeaturedProducts FeaturedProducts[]
  SpecialOffers    SpecialOffers[]
}

model Brands {
  id         Int        @id @default(autoincrement())
  name       String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Products   Products[]
}

model FeaturedProducts {
  id         Int      @id @default(autoincrement())
  product_id Int
  Products   Products @relation(fields: [product_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SpecialOffers {
  id         Int      @id @default(autoincrement())
  product_id Int
  Products   Products @relation(fields: [product_id], references: [id])
  starts_at  DateTime
  ends_at    DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Favorites {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       Users?   @relation(fields: [user_id], references: [id])
  Product    Products @relation(fields: [product_id], references: [id])
}

model UserAvatars {
  id         Int      @id @default(autoincrement())
  imgUrl     String
  user_id    Int // uploaded by
  User       Users    @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductImages {
  id         Int      @id @default(autoincrement())
  imgUrl     String
  product_id Int
  Product    Products @relation(fields: [product_id], references: [id])
  user_id    Int? // uploaded by
  User       Users?   @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum UserType {
  REGULAR
  ADMIN
}
